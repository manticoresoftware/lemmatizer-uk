stages:
  - build
  - repoupload
  - deploy

start:
  stage: build
  script:
    - echo "Build started."

tarball:
  stage: build
  interruptible: true
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /tarball/
  dependencies: []
  tags:
    - dev-host
  script:
    - mkdir build && cd build
    - cmake -DSPHINX_TAG=$RELEASE_TAG -DDISABLE_TESTING=1 ..
    - make tarball
    - cp manticore-*.tar.gz ..
  artifacts:
    paths:
      - manticore-*.tar.gz
    when: on_success
    expire_in: 12 hrs

osx:
  stage: build
  interruptible: true
  retry: 1
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /osx/
  dependencies: []
  variables:
    CACHEB: "../cache"
    OPENSSL_ROOT_DIR: "/usr/local/opt/openssl"
    DIAGNOSTIC: 1
  tags:
    - mac
    - build
  script:
    - mkdir build && cd build
    - cmake -DSPHINX_TAG=$RELEASE_TAG -DDISTR_BUILD=macos -DLIBS_BUNDLE=/work ..
    - make -j2 package
    - cp manticore-*.tar.gz ..
  artifacts:
    paths:
      - manticore-*.tar.gz
    when: on_success
    expire_in: 12 hrs
  cache:
    key: darwin-release
    paths:
      - cache/*-src
      - cache/galera*64/libgalera*
      - cache/galera*64/galera-targets.cmake
      - cache/icu*64/*icu*
      - cache/re2*64/*re2*
      - cache/stemmer*64/*stemmer*
      - cache/boost*64

windows:
  stage: build
  interruptible: true
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /windows/
  dependencies: []
  tags:
    - windev19
    - build
  variables:
    LIBS_BUNDLE: "x:/bundle"
    CACHEB: "x:/cache"
    OPENSSL_ROOT: "x:/bundle/openssl-x64"
    BOOST_ROOT: "x:/boost_1_72_0"
    DIAGNOSTIC: 1
  script:
    - 'net use x: \\\\VBOXSRV\\shared'
    - mkdir sphinxbin-x64
    - cd sphinxbin-x64
    - cmake -DSPHINX_TAG=$RELEASE_TAG -DDISTR_BUILD=default -DWITH_PGSQL=1 -DWITH_RE2=1 -DWITH_STEMMER=1 -DUSE_SSL=1 ..
    - cmake --build . --target package --config RelWithDebInfo
    - cp manticore-*.zip ..
    - cd ..
    - mkdir sphinxconvbin-x64
    - cd sphinxconvbin-x64
    - cmake -DSPHINX_TAG=$RELEASE_TAG -DDISABLE_TESTING=1 -DWITH_RE2=0 -DWITH_STEMMER=0 -DWITH_RE2=0 -DWITH_STEMMER=0 -WITH_EXPAT=0 -WITH_ICONV=0 -WITH_MYSQL=0 ..
    - cmake --build . --target package --config RelWithDebInfo --clean-first    
    - cp manticore-*-converter.zip ..
  artifacts:
    paths:
      - manticore-*.zip
    when: on_success
    expire_in: 12 hrs
  cache: {}

.redhat_based:
  stage: build
  interruptible: true
  dependencies: []
  variables:
    REPO_DIST_NAME: "centos"
    CACHEB: "../cache"
    DIAGNOSTIC: 1 # let's set it by default forever
  tags:
    - docker
  before_script:
    - mc config host add dev $MINIO_HOST
  script:
    - ln -s $(pwd) /manticore012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789/src
    - cd /manticore012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789/src
    - mc mirror -a dev/runner-cache/releases/$DISTR/ cache/
    - test -e cache/cache-src.tar.gz && tar -zxf cache/cache-src.tar.gz && chmod +x cache/galera*/libgalera_manticore*
    - mkdir build && cd build
    - cmake -DPACK=1 -DSPHINX_TAG=$RELEASE_TAG $XTRAFLAGS ..
    - make -j4 package
    - cmake -DPACK=1 -DSPLIT=1 -DSPHINX_TAG=$RELEASE_TAG $XTRAFLAGS ..
    - make -j4 package    
    - cp manticore*.rpm ..
    - cd ..
    - tar -zcf cache/cache-src.tar.gz cache/*-src
    - mc mirror --exclude "*.dir" --exclude "*.o" --exclude "*/CMakeFiles/*" --exclude "*/Makefile" --exclude "*-src/*" --exclude "galera-*/*.a" --exclude "*/cmake_install.cmake" --overwrite -a cache/ dev/runner-cache/releases/$DISTR/
  artifacts:
    paths:
      - manticore*.rpm
    when: on_success
    expire_in: 12 hrs

.debian_based:
  stage: build
  interruptible: true
  dependencies: []
  tags:
    - docker
  variables:
    CACHEB: "../cache"
    DIAGNOSTIC: 1 # let's set it by default forever
  before_script:
    - mc config host add dev $MINIO_HOST
  script:
    - mc mirror dev/runner-cache/releases/$DISTR/ cache/
    - test -e cache/cache-src.tar.gz && tar -zxf cache/cache-src.tar.gz
    - mkdir build && cd build
    - cmake -DPACK=1 -DSPHINX_TAG=$RELEASE_TAG $XTRAFLAGS ..
    - make -j4 package
    - cmake -DPACK=1 -DSPLIT=1 -DSPHINX_TAG=$RELEASE_TAG $XTRAFLAGS ..
    - make -j4 package    
    - cp manticore*deb ..
    - cd ..
    - tar -zcf cache/cache-src.tar.gz cache/*-src
    - mc mirror --exclude "*.dir" --exclude "*.o" --exclude "*/CMakeFiles/*" --exclude "*/Makefile" --exclude "*-src/*" --exclude "galera-*/*.a" --exclude "*/cmake_install.cmake" --overwrite cache/ dev/runner-cache/releases/$DISTR/
  artifacts:
    paths:
      - manticore*deb
    when: on_success
    expire_in: 12 hrs

rhel7:
  extends:
    - .redhat_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /rhel7/
  variables:
    REPO_DIST_VER: "7"
  image: registry.gitlab.com/manticoresearch/dev/centos7_cmake:317

rhelsplit7:
  extends:
    - .redhat_based
  rules:
    - if: $WHAT =~ /rhelsplit7/
  variables:
    XTRAFLAGS: "-DSPLIT_APPS=ON -DNOAPI=ON"
    REPO_DIST_VER: "7"
  image: registry.gitlab.com/manticoresearch/dev/centos7_cmake:317

rhel8:
  extends:
    - .redhat_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /rhel8/
  variables:
    REPO_DIST_VER: "8"
  image: registry.gitlab.com/manticoresearch/dev/centos8_cmake:317

stretch:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /stretch/
  image: registry.gitlab.com/manticoresearch/dev/stretch_cmake:317

xenial:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /xenial/
  image: registry.gitlab.com/manticoresearch/dev/xenial_cmake:317

bionic:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /bionic/
  image: registry.gitlab.com/manticoresearch/dev/bionic_cmake:317

focal:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /focal/
  image: registry.gitlab.com/manticoresearch/dev/focal_cmake:317

buster:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /buster/
  image: registry.gitlab.com/manticoresearch/dev/buster_cmake:317


collect_repo:
  stage: repoupload
  interruptible: true
  rules:
    - if: $SOME_VAR==null  #strange hack but without that - the job is skips
  tags:
    - dev-host
  script:
    - echo "Collected packages"
    - ls -1
    - ~/upload_repo.sh
  dependencies: [rhel7, rhel8, rhelsplit7, stretch, xenial, bionic, buster, focal, tarball, osx, windows]


build_docker:
  stage: deploy
  dependencies: []
  interruptible: true
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $REPO_NAME=='$REPO_NAME' || $WHAT=='$WHAT'
    - if: $WHAT==null && $CI_COMMIT_BRANCH == "master"
  tags:
    - dev-host
  script:
    - echo "Build docker image"
    - ~/build.sh


# collect artifacts from all previous jobs.
# m.b. it has sense to also publish them in one click to github release?

# use hidden job instead of commented out
.collect:
  stage: deploy
  interruptible: true
  rules:
    - if: $WHAT=="all" && $CI_COMMIT_BRANCH == "master"
    - if: $WHAT =~ /collect/ && $CI_COMMIT_BRANCH == "master"
  dependencies: [tarball, osx, windows, rhel7, rhel8, stretch, xenial, bionic, buster]
  tags:
    - dev-host
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Collected packages"
    - ls -1
    - ~/upload_repo.sh
  artifacts:
    paths:
      - manticore*
    when: on_success
    expire_in: 1 week
  allow_failure: false
  cache: {}

