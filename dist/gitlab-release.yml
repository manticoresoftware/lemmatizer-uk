stages:
  - build
  - repoupload
  - deploy

start:
  stage: build
  script:
    - echo "Build started."

tarball:
  stage: build
  interruptible: true
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /tarball/
  dependencies: []
  tags:
    - dev-host
  script:
    - mkdir build && cd build
    - cmake -DDISTR=default ..
    - make -j2 package
    - cp manticore-*.tar.gz ..
  artifacts:
    paths:
      - manticore-*.tar.gz
    when: on_success
    expire_in: 12 hrs

osx:
  stage: build
  interruptible: true
  retry: 1
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /osx/
  dependencies: []
  variables:
    CACHEB: "../cache"
    DIAGNOSTIC: 1
  tags:
    - mac
    - build
  script:
    - mkdir build && cd build
    - cmake -DDISTR=default ..
    - make -j2 package
    - cp manticore-*.tar.gz ..
  artifacts:
    paths:
      - manticore-*.tar.gz
    when: on_success
    expire_in: 12 hrs
  cache:
    key: darwin-release
    paths:
      - manticore-*.tar.gz

windows:
  stage: build
  interruptible: true
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /windows/
  dependencies: []
  tags:
    - windev19
    - build
  variables:
    DIAGNOSTIC: 1
  script:
    - cmake --build . --target package --config RelWithDebInfo
    - cp manticore-*.zip ..
  artifacts:
    paths:
      - manticore-*.zip
    when: on_success
    expire_in: 12 hrs
  cache: {}

.redhat_based:
  stage: build
  interruptible: true
  dependencies: []
  variables:
    REPO_DIST_NAME: "centos"
    CACHEB: "../cache"
    DIAGNOSTIC: 1 # let's set it by default forever
  tags:
    - docker
  before_script:
    - mc config host add dev $MINIO_HOST
  script:
    - mkdir build && cd build
    - cmake -DPACK=1 $XTRAFLAGS ..
    - make -j4 package
    - cp manticore*.rpm ..
  artifacts:
    paths:
      - manticore*.rpm
    when: on_success
    expire_in: 12 hrs

.debian_based:
  stage: build
  interruptible: true
  dependencies: []
  tags:
    - docker
  variables:
    CACHEB: "../cache"
    DIAGNOSTIC: 1 # let's set it by default forever
  before_script:
    - mc config host add dev $MINIO_HOST
  script:
    - mkdir build && cd build
    - cmake -DPACK=1 $XTRAFLAGS ..
    - make -j4 package
    - cp manticore*deb ..
  artifacts:
    paths:
      - manticore*deb
    when: on_success
    expire_in: 12 hrs

rhel7:
  extends:
    - .redhat_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /rhel7/
  variables:
    REPO_DIST_VER: "7"
  image: registry.gitlab.com/manticoresearch/dev/centos7_python:394

rhel8:
  extends:
    - .redhat_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /rhel8/
  variables:
    REPO_DIST_VER: "8"
  image: registry.gitlab.com/manticoresearch/dev/centos8_python:394

stretch:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /stretch/
  image: registry.gitlab.com/manticoresearch/dev/stretch_python:394

xenial:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /xenial/
  image: registry.gitlab.com/manticoresearch/dev/xenial_python:394

bionic:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /bionic/
  image: registry.gitlab.com/manticoresearch/dev/bionic_python:394

focal:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /focal/
  image: registry.gitlab.com/manticoresearch/dev/focal_python:394

buster:
  extends:
    - .debian_based
  rules:
    - if: $WHAT=='$WHAT' || $WHAT==null || $WHAT=="all" || $WHAT =~ /buster/
  image: registry.gitlab.com/manticoresearch/dev/buster_python:394


collect_repo:
  stage: repoupload
  interruptible: true
  rules:
    - if: $SOME_VAR==null  #strange hack but without that - the job is skips
  tags:
    - dev-host
  script:
    - echo "Collected packages"
    - ls -1
    - ~/upload_repo.sh
  dependencies: [rhel7, rhel8, rhelsplit7, stretch, xenial, bionic, buster, focal, tarball, osx, windows]


# collect artifacts from all previous jobs.
# m.b. it has sense to also publish them in one click to github release?

# use hidden job instead of commented out
.collect:
  stage: deploy
  interruptible: true
  rules:
    - if: $WHAT=="all" && $CI_COMMIT_BRANCH == "master"
    - if: $WHAT =~ /collect/ && $CI_COMMIT_BRANCH == "master"
  dependencies: [tarball, osx, windows, rhel7, rhel8, stretch, xenial, bionic, buster]
  tags:
    - dev-host
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Collected packages"
    - ls -1
    - ~/upload_repo.sh
  artifacts:
    paths:
      - manticore*
    when: on_success
    expire_in: 1 week
  allow_failure: false
  cache: {}

